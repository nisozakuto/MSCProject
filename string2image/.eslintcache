[{"/Users/nisozakuta/Documents/Personal_Projects/RBenchimol/string2image/src/App.js":"1","/Users/nisozakuta/Documents/Personal_Projects/RBenchimol/string2image/src/components/Header.jsx":"2","/Users/nisozakuta/Documents/Personal_Projects/RBenchimol/string2image/src/components/Footer.jsx":"3","/Users/nisozakuta/Documents/Personal_Projects/RBenchimol/string2image/src/components/Body.jsx":"4","/Users/nisozakuta/Documents/Personal_Projects/RBenchimol/string2image/src/index.js":"5"},{"size":285,"mtime":1612372929637,"results":"6","hashOfConfig":"7"},{"size":212,"mtime":1612372922799,"results":"8","hashOfConfig":"7"},{"size":151,"mtime":1612372797896,"results":"9","hashOfConfig":"7"},{"size":2986,"mtime":1612381703566,"results":"10","hashOfConfig":"7"},{"size":500,"mtime":1612379811868,"results":"11","hashOfConfig":"7"},{"filePath":"12","messages":"13","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"slzai1",{"filePath":"14","messages":"15","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"16","messages":"17","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"18","messages":"19","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"20"},{"filePath":"21","messages":"22","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/nisozakuta/Documents/Personal_Projects/RBenchimol/string2image/src/App.js",[],"/Users/nisozakuta/Documents/Personal_Projects/RBenchimol/string2image/src/components/Header.jsx",["23"],"/Users/nisozakuta/Documents/Personal_Projects/RBenchimol/string2image/src/components/Footer.jsx",[],"/Users/nisozakuta/Documents/Personal_Projects/RBenchimol/string2image/src/components/Body.jsx",["24"],"import React, { Component } from \"react\";\nimport { ChromePicker } from \"react-color\";\n\nexport default class Body extends Component {\n  constructor() {\n    super();\n    this.state = {\n      isAddingColor: true,\n      isAddingRange: false,\n      colorToAdd: \"\",\n      background: \"#fff\",\n      colors: [],\n      number: \"\",\n    };\n  }\n\n  handleChangeComplete = (color) => {\n    this.setState({ background: color.hex });\n  };\n\n  addingOneColor = () => {\n    this.setState({\n      isAddingColor: true,\n      isAddingRange: false,\n    });\n  };\n\n  addingRangeColor = () => {\n    this.setState({\n      isAddingColor: false,\n      isAddingRange: true,\n    });\n  };\n\n  colorNumberChangeHandler = (event) => {\n    this.setState({\n      number: event.target.value,\n    });\n  };\n\n  colorHexChangeHandler = (event) => {\n    this.setState({\n      colorToAdd: event.target.value,\n    });\n  };\n  colorSetSubmitHandler = (event) => {\n    event.preventDefault();\n    this.setState({ [this.state.number]: this.state.colorToAdd });\n    console.log(\"your number\", this.state.number);\n    console.log(\"Submitting color:\", this.state.colorToAdd);\n  };\n\n  downloadImage = () => {\n    console.log(\"clicked\");\n    // html2canvas(document.querySelector(\"#capture\")).then((canvas) => {\n    //   document.body.appendChild(canvas);\n    // });\n    const myCanvas = document.querySelector(\"canvas\");\n  };\n  render() {\n    return (\n      <div className=\"container\">\n        <h1>String2Image</h1>\n        <section>\n          <h3>Do you want to add one color or a range?</h3>\n          <button onClick={this.addingOneColor}>One</button>\n          <button onClick={this.addingRangeColor}>Two</button>\n\n          <p>isAddingColor: {String(this.state.isAddingColor)}</p>\n          <p>isAddingRange: {String(this.state.isAddingRange)}</p>\n        </section>\n\n        <section>\n          <form onSubmit={this.colorSetSubmitHandler}>\n            <ChromePicker\n              color={this.state.background}\n              onChangeComplete={this.handleChangeComplete}\n            />\n            {this.state.isAddingColor ? (\n              <>\n                <p>Choose color number</p>\n\n                <input\n                  id=\"colorHex\"\n                  type=\"colorNumber\"\n                  placeholder=\"Enter the color number you want to set\"\n                  onChange={this.colorNumberChangeHandler}\n                />\n                <input\n                  id=\"colorHex\"\n                  placeholder=\"Enter the colorHex\"\n                  onChange={this.colorHexChangeHandler}\n                />\n                <input type=\"submit\" value=\"Add Color\" />\n              </>\n            ) : (\n              <></>\n            )}\n            {this.state.isAddingRange ? <p>Choose range of colors</p> : <></>}\n          </form>\n        </section>\n\n        {/* <div id=\"capture\">\n          <h4>Hello world!</h4>\n          <button onClick={this.downloadImage}>downloadImage</button>\n        </div> */}\n      </div>\n    );\n  }\n}\n","/Users/nisozakuta/Documents/Personal_Projects/RBenchimol/string2image/src/index.js",[],{"ruleId":"25","severity":1,"message":"26","line":7,"column":9,"nodeType":"27","endLine":7,"endColumn":12},{"ruleId":"28","severity":1,"message":"29","line":58,"column":11,"nodeType":"30","messageId":"31","endLine":58,"endColumn":19},"jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","no-unused-vars","'myCanvas' is assigned a value but never used.","Identifier","unusedVar"]