[{"/Users/nisozakuta/Documents/Personal_Projects/RBenchimol/string2image/src/App.js":"1","/Users/nisozakuta/Documents/Personal_Projects/RBenchimol/string2image/src/components/Header.jsx":"2","/Users/nisozakuta/Documents/Personal_Projects/RBenchimol/string2image/src/components/Footer.jsx":"3","/Users/nisozakuta/Documents/Personal_Projects/RBenchimol/string2image/src/components/Body.jsx":"4"},{"size":285,"mtime":1612372929637,"results":"5","hashOfConfig":"6"},{"size":212,"mtime":1612372922799,"results":"7","hashOfConfig":"6"},{"size":151,"mtime":1612372797896,"results":"8","hashOfConfig":"6"},{"size":2365,"mtime":1612376845355,"results":"9","hashOfConfig":"6"},{"filePath":"10","messages":"11","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"slzai1",{"filePath":"12","messages":"13","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"14","messages":"15","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"16","messages":"17","errorCount":1,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"18"},"/Users/nisozakuta/Documents/Personal_Projects/RBenchimol/string2image/src/App.js",[],"/Users/nisozakuta/Documents/Personal_Projects/RBenchimol/string2image/src/components/Header.jsx",["19"],"/Users/nisozakuta/Documents/Personal_Projects/RBenchimol/string2image/src/components/Footer.jsx",[],"/Users/nisozakuta/Documents/Personal_Projects/RBenchimol/string2image/src/components/Body.jsx",["20","21"],"import React, { Component } from \"react\";\nimport { SketchPicker } from \"react-color\";\n\nexport default class Body extends Component {\n  constructor() {\n    super();\n    this.state = {\n      isAddingColor: true,\n      isAddingRange: false,\n      colorToAdd: \"\",\n      background: \"#fff\",\n    };\n  }\n\n  handleChangeComplete = (color) => {\n    this.setState({ background: color.hex });\n  };\n\n  addingOneColor = () => {\n    this.setState({\n      isAddingColor: true,\n      isAddingRange: false,\n    });\n  };\n\n  addingRangeColor = () => {\n    this.setState({\n      isAddingColor: false,\n      isAddingRange: true,\n    });\n  };\n\n  colorNumberChangeHandler = (event) => {\n    this.setState({\n      colorToAdd: event.target.value,\n    });\n  };\n  colorSetSubmitHandler = (event) => {\n    event.preventDefault();\n    console.log(\"Submitting color:\", this.state.colorToAdd);\n  };\n\n  downloadImage = () => {\n    console.log(\"clicked\");\n    html2canvas(document.querySelector(\"#capture\")).then((canvas) => {\n      document.body.appendChild(canvas);\n    });\n    const myCanvas = document.querySelector(\"canvas\");\n  };\n  render() {\n    return (\n      <div className=\"container\">\n        <h1>String2Image</h1>\n        <h3>Do you want to add one color or a range?</h3>\n        <button onClick={this.addingOneColor}>One</button>\n        <button onClick={this.addingRangeColor}>Two</button>\n\n        <p>isAddingColor: {String(this.state.isAddingColor)}</p>\n        <p>isAddingRange: {String(this.state.isAddingRange)}</p>\n\n        <form onSubmit={this.colorSetSubmitHandler}>\n          {this.state.isAddingColor ? (\n            <>\n              <p>Choose color number</p>\n              <input\n                id=\"colorNumber\"\n                type=\"number\"\n                placeholder=\"Enter the color number you want to set\"\n                onChange={this.colorNumberChangeHandler}\n              />\n              <SketchPicker\n                color={this.state.background}\n                onChangeComplete={this.handleChangeComplete}\n              />\n            </>\n          ) : (\n            <></>\n          )}\n          {this.state.isAddingRange ? <p>Choose range of colors</p> : <></>}\n        </form>\n        {/* <div id=\"capture\">\n          <h4>Hello world!</h4>\n          <button onClick={this.downloadImage}>downloadImage</button>\n        </div> */}\n      </div>\n    );\n  }\n}\n",{"ruleId":"22","severity":1,"message":"23","line":7,"column":9,"nodeType":"24","endLine":7,"endColumn":12},{"ruleId":"25","severity":2,"message":"26","line":45,"column":5,"nodeType":"27","messageId":"28","endLine":45,"endColumn":16},{"ruleId":"29","severity":1,"message":"30","line":48,"column":11,"nodeType":"27","messageId":"31","endLine":48,"endColumn":19},"jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","no-undef","'html2canvas' is not defined.","Identifier","undef","no-unused-vars","'myCanvas' is assigned a value but never used.","unusedVar"]